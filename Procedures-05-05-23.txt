--------*** TICKET *****---------------

CREATE OR REPLACE PROCEDURE CREAR_TICKET (I_TIPO_TICKET IN FARMACIA_ALTO_COSTO.TICKET.FK_TIPO_TICKET%TYPE,
                                          --I_ESTATUS IN FARMACIA_ALTO_COSTO.TICKET.FK_ESTATUS%TYPE,
                                          I_CEDULA_CIUDADANO IN FARMACIA_ALTO_COSTO.TICKET.CEDULA_CIUDADANO%TYPE,
                                          RETORNO OUT VARCHAR2
                                         )
AS
  V_COUNT_TICKET NUMBER(7);
  V_PK_TIP_TICKET NUMBER(7);
  V_INCREMENTO_TICKET varchar2(10);
  --
  V_NRO_MIN NUMBER(7);
  V_NRO_MAX NUMBER(7);
  V_LETRA VARCHAR2(5);
  --V_LTRA_NRO_TICKET VARCHAR2(10);
  --V_SUBSTR_NRO VARCHAR2(10);

BEGIN
   SELECT COUNT(*) INTO V_COUNT_TICKET FROM FARMACIA_ALTO_COSTO.TIPO_TICKET TT
          WHERE TT.PK_TIPO_TICKET = I_TIPO_TICKET;

          IF V_COUNT_TICKET > 0 THEN

             SELECT TK.PK_TIPO_TICKET INTO V_PK_TIP_TICKET FROM FARMACIA_ALTO_COSTO.TIPO_TICKET TK
                    WHERE TK.PK_TIPO_TICKET = I_TIPO_TICKET;
             SELECT TT.NRO_MIN INTO V_NRO_MIN FROM TIPO_TICKET TT
                    WHERE TT.PK_TIPO_TICKET = V_PK_TIP_TICKET;
             SELECT TC.NRO_MAX INTO V_NRO_MAX FROM TIPO_TICKET TC
                    WHERE TC.PK_TIPO_TICKET = V_PK_TIP_TICKET;
             SELECT TP.LETRA INTO V_LETRA FROM TIPO_TICKET TP
                    WHERE TP.PK_TIPO_TICKET = V_PK_TIP_TICKET;      
             --CONDICION PARA NUMERO DE TIPOS DE TICKET
             
             IF V_PK_TIP_TICKET > 0 THEN
                SELECT MAX(T.NRO_TICKET) INTO V_INCREMENTO_TICKET FROM FARMACIA_ALTO_COSTO.TICKET T
                     WHERE T.FK_TIPO_TICKET = V_PK_TIP_TICKET;
              --  V_SUBSTR_NRO := SUBSTR(V_INCREMENTO_TICKET,3);
                     
               CASE
                 WHEN V_INCREMENTO_TICKET > 0 THEN
                      V_INCREMENTO_TICKET := V_INCREMENTO_TICKET + 1;
                      
                      IF V_INCREMENTO_TICKET > V_NRO_MAX THEN
                         RETORNO := 3; --NO SE PUEDE SUPERAR EL LIMITE DE TICKET
                       ELSE
                         INSERT INTO FARMACIA_ALTO_COSTO.TICKET (PK_TICKET,FK_TIPO_TICKET,FK_ESTATUS,CEDULA_CIUDADANO,NRO_TICKET)
                             VALUES (SEQ_TICKET.NEXTVAL,V_PK_TIP_TICKET,19,I_CEDULA_CIUDADANO,V_INCREMENTO_TICKET);
                         COMMIT;
                         RETORNO := V_LETRA ||'-'|| V_INCREMENTO_TICKET;
                      END IF;

                ELSE
                  --V_LTRA_NRO_TICKET := V_LETRA ||'-'||V_NRO_MIN;
                  INSERT INTO FARMACIA_ALTO_COSTO.TICKET (PK_TICKET,FK_TIPO_TICKET,FK_ESTATUS,CEDULA_CIUDADANO,NRO_TICKET)
                             VALUES (SEQ_TICKET.NEXTVAL,V_PK_TIP_TICKET,19,I_CEDULA_CIUDADANO,V_NRO_MIN);
                  COMMIT;
                  RETORNO := V_LETRA ||'-'|| V_NRO_MIN;
                END CASE;

               ELSE
                  RETORNO := 1;--NINGUNA CONDICION SE CUMPLE
               END IF;
            ELSE
              RETORNO := 1;--TIPO DE TICKET NO REGISTRADO
          END IF;
END CREAR_TICKET;

-------------------------------------------------------*--------------------------------------------------------
-------------------------------------------------------*--------------------------------------------------------


*****MEDICAMENTO******

------INSERT ---
CREATE OR REPLACE PROCEDURE INSERT_MEDICAMENTO (I_NOMBRE_MEDICAMENTO IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.NOMBRE_MEDICAMENTO%TYPE,
                                                I_TIPO_MEDICAMENTO IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.FK_TIPO_MEDICAMENTO%TYPE,
                                                I_COMPONENTE_PRINC IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.COMPONENTE_PRINC%TYPE,
                                                RETORNO OUT INTEGER
                                               )
IS
  V_COUNT_MEDICAMENTO NUMBER(7);
  --V_PK_MEDICAMENTO_MAX NUMBER(7);
  --V_CANTIDAD_MEDICAMENTO NUMBER(7);
  --V_LOTE_MEDICAMENTO NUMBER(7);
BEGIN
  SELECT COUNT(*) INTO V_COUNT_MEDICAMENTO FROM MEDICAMENTOS M
         WHERE M.NOMBRE_MEDICAMENTO = I_NOMBRE_MEDICAMENTO;

         IF V_COUNT_MEDICAMENTO > 0 THEN
           
            RETORNO := 1; --MEDICAMENTO YA REGISTRADO  
                 
          ELSE
            
            INSERT INTO MEDICAMENTOS (PK_MEDICAMENTO,NOMBRE_MEDICAMENTO,COMPONENTE_PRINC,FK_TIPO_MEDICAMENTO)
                        VALUES (SEQ_MEDICAMENTO.NEXTVAL,I_NOMBRE_MEDICAMENTO,I_COMPONENTE_PRINC,I_TIPO_MEDICAMENTO);
            COMMIT;
            RETORNO := 2; -- EL MEDICAMENTO REGISTRADO
            -- DETALLES MEDICAMENTOS
            /*SELECT MAX(MM.PK_MEDICAMENTO) INTO V_PK_MEDICAMENTO_MAX FROM MEDICAMENTOS MM;
            
            INSERT INTO DETALLES_MEDICAMENTOS (PK_DETALLE_MEDIC,FK_MEDICAMENTO)
                   VALUES(SEQ_DET_MEDICAMENTO.NEXTVAL,V_PK_MEDICAMENTO_MAX);
            COMMIT;*/
            
              
         END IF;

END INSERT_MEDICAMENTO;


---UPDATE 

CREATE OR REPLACE PROCEDURE UPDATE_MEDICAMENTO (U_PK_NOMBRE_MEDICAMENTO IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.NOMBRE_MEDICAMENTO%TYPE,
                                                U_NOMBRE_MEDICAMENTO IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.NOMBRE_MEDICAMENTO%TYPE,
                                                U_TIPO_MEDICAMENTO IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.FK_TIPO_MEDICAMENTO%TYPE,
                                                U_COMPONENTE_PRINC IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.COMPONENTE_PRINC%TYPE,
                                                RETORNO OUT INTEGER
                                               )
AS
  V_COUNT_MEDICAMENTO NUMBER(7);
  V_PK_MEDICAMENTO NUMBER(7);
  V_NOMBRE_MEDICAMENTO VARCHAR2(30);
  --V_TIPO_MEDICAMENTO NUMBER(7);
  --V_PK_DETALLE_MEDICAMENTO NUMBER(7);
  --V_UNIDAD_MEDIDA VARCHAR2(25);
  
BEGIN
   SELECT COUNT(*) INTO V_COUNT_MEDICAMENTO FROM MEDICAMENTOS M
         WHERE M.NOMBRE_MEDICAMENTO = U_PK_NOMBRE_MEDICAMENTO;
   
         IF V_COUNT_MEDICAMENTO > 0 THEN
           
           SELECT MS.PK_MEDICAMENTO INTO V_PK_MEDICAMENTO FROM MEDICAMENTOS MS
                  WHERE MS.NOMBRE_MEDICAMENTO = U_PK_NOMBRE_MEDICAMENTO;
           SELECT COUNT(*) INTO V_NOMBRE_MEDICAMENTO FROM MEDICAMENTOS MM
                  WHERE MM.NOMBRE_MEDICAMENTO = U_NOMBRE_MEDICAMENTO;
           IF V_NOMBRE_MEDICAMENTO > 0 THEN 
              RETORNO := 1;--MEDICAMENTO CON EL NOMBRE YA REGISTRADO
             ELSE
                 UPDATE MEDICAMENTOS MU
                        SET MU.NOMBRE_MEDICAMENTO = U_NOMBRE_MEDICAMENTO,
                        MU.COMPONENTE_PRINC = U_COMPONENTE_PRINC,
                        MU.FK_TIPO_MEDICAMENTO = U_TIPO_MEDICAMENTO
                 WHERE MU.PK_MEDICAMENTO = V_PK_MEDICAMENTO;
                 COMMIT;
                 RETORNO := 2; -- EL MEDICAMENTO YA EXISTE  Y MODIFICADO;
            END IF;
           
          ELSE
             RETORNO := 3; --  MEDICAMENTO NO  REGISTRADO
         END IF;


END UPDATE_MEDICAMENTO;

--------------DELETE-----

CREATE OR REPLACE PROCEDURE DELETE_MEDICAMENTO (D_MEDICAMENTO IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.NOMBRE_MEDICAMENTO%TYPE,
                                                RETORNO OUT INTEGER
                                               )
AS
  V_COUNT_MEDICAMENTO NUMBER(7);
  V_PK_MEDICAMENTO NUMBER(7);
BEGIN
   SELECT COUNT(*) INTO V_COUNT_MEDICAMENTO FROM MEDICAMENTOS M
         WHERE M.NOMBRE_MEDICAMENTO = D_MEDICAMENTO;

         IF V_COUNT_MEDICAMENTO > 0 THEN

           SELECT MS.PK_MEDICAMENTO INTO V_PK_MEDICAMENTO FROM MEDICAMENTOS MS
                  WHERE MS.NOMBRE_MEDICAMENTO = D_MEDICAMENTO;
           DELETE FROM MEDICAMENTOS MU WHERE MU.PK_MEDICAMENTO = V_PK_MEDICAMENTO;
           COMMIT;
           RETORNO := 2; --  MEDICAMENTO EXISTE  Y ELIMINADO

           ELSE
             RETORNO := 1; --  MEDICAMENTO NO  REGISTRADO
         END IF;


END DELETE_MEDICAMENTO;

-------------------------*----------------------------------------------

----- INVENTARIO MEDICAMENTO ----------

---INSERT 
CREATE OR REPLACE PROCEDURE INSERT_INV_MEDICAMENTO
                                               (I_PK_NOMBRE_MEDICAMENTO IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.PK_MEDICAMENTO%TYPE,
                                                I_PRESENTACION_MEDICAMENTO IN FARMACIA_ALTO_COSTO.DETALLES_MEDICAMENTOS.FK_PRES_MEDICAMENTO%TYPE,
                                                I_ALMACEN IN FARMACIA_ALTO_COSTO.ALMACEN.PK_ALMACEN%TYPE,
                                                I_UNIDAD_MEDIDA IN FARMACIA_ALTO_COSTO.DETALLES_MEDICAMENTOS.UNIDAD_MEDIDA%TYPE,
                                                I_CANTIDAD IN FARMACIA_ALTO_COSTO.INVENTARIO_MEDICAMENTOS.CANTIDAD%TYPE,
                                                I_LOTE IN FARMACIA_ALTO_COSTO.INVENTARIO_MEDICAMENTOS.LOTE%TYPE,
                                                I_ESTATUS IN FARMACIA_ALTO_COSTO.INVENTARIO_MEDICAMENTOS.FK_ESTATUS%TYPE,
                                                I_FECHA_VENCIMIENTO IN FARMACIA_ALTO_COSTO.INVENTARIO_MEDICAMENTOS.FECHA_VENCIMIENTO%TYPE,
                                                I_OBSERVACION IN FARMACIA_ALTO_COSTO.INVENTARIO_MEDICAMENTOS.OBSERVACION%TYPE,
                                                RETORNO OUT INTEGER
                                               )
IS
  V_COUNT_MEDICAMENTO NUMBER(7);
  V_PK_MEDICAMENTO NUMBER(7);
  --V_PK_MEDICAMENTO_MAX NUMBER(7);
  V_PK_DETALLE_MEDIC_MAX NUMBER(7);
  --V_CANTIDAD_MEDICAMENTO NUMBER(7);
  --V_LOTE_MEDICAMENTO NUMBER(7);
  --V_FK_TIPO_MEDICAMENTO NUMBER(7);
  V_COUNT_DETALLE_MEDIC NUMBER(7);
  V_FK_PRES_MEDICAMENTO NUMBER(7);
  V_UNIDAD_MEDIDA VARCHAR2(50);
BEGIN
  SELECT COUNT(*) INTO V_COUNT_MEDICAMENTO FROM MEDICAMENTOS M
         WHERE M.PK_MEDICAMENTO = I_PK_NOMBRE_MEDICAMENTO;

         IF V_COUNT_MEDICAMENTO > 0 THEN
           
           SELECT MC.PK_MEDICAMENTO INTO V_PK_MEDICAMENTO FROM MEDICAMENTOS MC
                  WHERE MC.PK_MEDICAMENTO = I_PK_NOMBRE_MEDICAMENTO;
           
           -- DETALLES MEDICAMENTOS
            
            SELECT COUNT(*) INTO V_COUNT_DETALLE_MEDIC FROM DETALLES_MEDICAMENTOS DO
                   WHERE DO.FK_MEDICAMENTO = V_PK_MEDICAMENTO;
                   
            IF V_COUNT_DETALLE_MEDIC > 0 THEN    
                   
                   SELECT COUNT(*) INTO V_FK_PRES_MEDICAMENTO FROM DETALLES_MEDICAMENTOS DO
                          WHERE DO.FK_MEDICAMENTO = V_PK_MEDICAMENTO
                          AND DO.FK_PRES_MEDICAMENTO = I_PRESENTACION_MEDICAMENTO;
                   SELECT COUNT(*) INTO V_UNIDAD_MEDIDA FROM DETALLES_MEDICAMENTOS DD
                          WHERE DD.FK_MEDICAMENTO = V_PK_MEDICAMENTO
                          AND DD.UNIDAD_MEDIDA = I_UNIDAD_MEDIDA;            
                  
                   IF V_FK_PRES_MEDICAMENTO > 0 AND 
                      V_UNIDAD_MEDIDA > 0 THEN 
               
                      RETORNO := 1; -- MEDICAMENTOS CON LOS MISMOS DETALLES YA EXISTE
                    ELSE
                        INSERT INTO DETALLES_MEDICAMENTOS (PK_DETALLE_MEDIC,FK_MEDICAMENTO,FK_PRES_MEDICAMENTO,UNIDAD_MEDIDA)
                               VALUES (SEQ_DET_MEDICAMENTO.NEXTVAL,V_PK_MEDICAMENTO,I_PRESENTACION_MEDICAMENTO,I_UNIDAD_MEDIDA);
                        COMMIT;
            
                       -- INVENATARIO MEDICAMENTOS
                       SELECT MAX(DM.PK_DETALLE_MEDIC) INTO V_PK_DETALLE_MEDIC_MAX FROM DETALLES_MEDICAMENTOS DM;
                       INSERT INTO INVENTARIO_MEDICAMENTOS (PK_INVENTARIO_MEDIC,FK_DETALLE_MEDIC,FK_ALMACEN,FK_ESTATUS,CANTIDAD,LOTE,FECHA_VENCIMIENTO,OBSERVACION) 
                              VALUES (SEQ_INV_MEDICAMENTO.NEXTVAL,V_PK_DETALLE_MEDIC_MAX,I_ALMACEN,I_ESTATUS,I_CANTIDAD,I_LOTE,TO_CHAR(I_FECHA_VENCIMIENTO,'DD/MM/YYYY'),I_OBSERVACION); 
                       COMMIT; 
                       RETORNO := 2; -- EL MEDICAMENTO AGREGADO A INVENTARIO
              
                 END IF; 
                ELSE
                  INSERT INTO DETALLES_MEDICAMENTOS (PK_DETALLE_MEDIC,FK_MEDICAMENTO,FK_PRES_MEDICAMENTO,UNIDAD_MEDIDA)
                               VALUES (SEQ_DET_MEDICAMENTO.NEXTVAL,V_PK_MEDICAMENTO,I_PRESENTACION_MEDICAMENTO,I_UNIDAD_MEDIDA);
                  COMMIT;
            
                  -- INVENATARIO MEDICAMENTOS
                  SELECT MAX(DM.PK_DETALLE_MEDIC) INTO V_PK_DETALLE_MEDIC_MAX FROM DETALLES_MEDICAMENTOS DM;
                  INSERT INTO INVENTARIO_MEDICAMENTOS (PK_INVENTARIO_MEDIC,FK_DETALLE_MEDIC,FK_ALMACEN,FK_ESTATUS,CANTIDAD,LOTE,FECHA_VENCIMIENTO,OBSERVACION) 
                              VALUES (SEQ_INV_MEDICAMENTO.NEXTVAL,V_PK_DETALLE_MEDIC_MAX,I_ALMACEN,I_ESTATUS,I_CANTIDAD,I_LOTE,TO_CHAR(I_FECHA_VENCIMIENTO,'DD/MM/YYYY'),I_OBSERVACION); 
                  COMMIT; 
                  RETORNO := 2; -- EL MEDICAMENTO REGISTRADO   
             END IF;    
             ---    
                 
          ELSE
            
            RETORNO := 3; --MEDICAMENTO NO REGISTRADO
            
         END IF;

END INSERT_INV_MEDICAMENTO;

---UPDATE

CREATE OR REPLACE PROCEDURE UPDATE_INV_MEDICAMENTO
                                               (U_PK_NOMBRE_MEDICAMENTO IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.NOMBRE_MEDICAMENTO%TYPE,
                                                U_PRESENTACION_MEDICAMENTO IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.NOMBRE_MEDICAMENTO%TYPE,
                                                U_GRAMOS_MEDICAMENTO IN FARMACIA_ALTO_COSTO.DETALLES_MEDICAMENTOS.UNIDAD_MEDIDA%TYPE,
                                                U_ALMACEN IN FARMACIA_ALTO_COSTO.INVENTARIO_MEDICAMENTOS.FK_ALMACEN%TYPE,
                                                U_ESTATUS IN FARMACIA_ALTO_COSTO.INVENTARIO_MEDICAMENTOS.FK_ESTATUS%TYPE,
                                                RETORNO OUT INTEGER
                                               )
AS
  V_COUNT_MEDICAMENTO NUMBER(7);
  V_PK_MEDICAMENTO NUMBER(7);
  --V_FK_MEDICAMENTO NUMBER(7);
  V_PK_DETALLE_MEDICAMENTO NUMBER(7);
  V_PRESENTACION_MEDICAMENTO NUMBER(7);
  
BEGIN
   SELECT COUNT(*) INTO V_COUNT_MEDICAMENTO FROM MEDICAMENTOS M
         WHERE M.NOMBRE_MEDICAMENTO = U_PK_NOMBRE_MEDICAMENTO;
   
         IF V_COUNT_MEDICAMENTO > 0 THEN
           
           SELECT MS.PK_MEDICAMENTO INTO V_PK_MEDICAMENTO FROM MEDICAMENTOS MS
                  WHERE MS.NOMBRE_MEDICAMENTO = U_PK_NOMBRE_MEDICAMENTO;
           SELECT PM.PK_PRES_MEDICAMENTO INTO V_PRESENTACION_MEDICAMENTO FROM PRESENTACION_MEDICAMENTO PM
                  WHERE PM.PRESENT_MEDICAMENTO = U_PRESENTACION_MEDICAMENTO;
           --DETALLE MEDICAMENTOS       
           SELECT DT.PK_DETALLE_MEDIC INTO V_PK_DETALLE_MEDICAMENTO FROM DETALLES_MEDICAMENTOS DT
                  WHERE DT.FK_MEDICAMENTO = V_PK_MEDICAMENTO
                  AND DT.FK_PRES_MEDICAMENTO = V_PRESENTACION_MEDICAMENTO
                  AND DT.UNIDAD_MEDIDA = U_GRAMOS_MEDICAMENTO;
                  
            IF V_PK_DETALLE_MEDICAMENTO > 0 THEN
               UPDATE INVENTARIO_MEDICAMENTOS IM
                 SET IM.FK_ESTATUS = U_ESTATUS,
                     IM.FK_ALMACEN = U_ALMACEN
               WHERE IM.FK_DETALLE_MEDIC = V_PK_DETALLE_MEDICAMENTO;
               COMMIT;
               RETORNO := 2; -- DATOS ACTUALIZADO
             
             END IF;
             
           ELSE
             RETORNO := 1; --  MEDICAMENTO NO  REGISTRADO
         END IF;


END UPDATE_INV_MEDICAMENTO;


---DELETE

CREATE OR REPLACE PROCEDURE DELETE_INV_MEDICAMENTO (D_INV_MEDICAMENTO IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.NOMBRE_MEDICAMENTO%TYPE,
                                                    U_GRAMOS_MEDICAMENTO IN FARMACIA_ALTO_COSTO.DETALLES_MEDICAMENTOS.UNIDAD_MEDIDA%TYPE,
                                                    U_PRESENTACION_MEDICAMENTO IN FARMACIA_ALTO_COSTO.PRESENTACION_MEDICAMENTO.PRESENT_MEDICAMENTO%TYPE,
                                                    RETORNO OUT INTEGER
                                                   )
AS
  V_COUNT_MEDICAMENTO NUMBER(7);
  V_PK_MEDICAMENTO NUMBER(7);
  V_PK_PRESENT_MEDICAMENTO NUMBER(7);
  V_PK_DETALLE_MEDICAMENTO NUMBER(7);
BEGIN
   SELECT COUNT(*) INTO V_COUNT_MEDICAMENTO FROM MEDICAMENTOS M
         WHERE M.NOMBRE_MEDICAMENTO = D_INV_MEDICAMENTO;

         IF V_COUNT_MEDICAMENTO > 0 THEN

           SELECT MS.PK_MEDICAMENTO INTO V_PK_MEDICAMENTO FROM MEDICAMENTOS MS
                  WHERE MS.NOMBRE_MEDICAMENTO = D_INV_MEDICAMENTO;
           SELECT PM.PK_PRES_MEDICAMENTO INTO V_PK_PRESENT_MEDICAMENTO FROM PRESENTACION_MEDICAMENTO PM
                  WHERE PM.PRESENT_MEDICAMENTO = U_PRESENTACION_MEDICAMENTO;
           --DETALLE MEDICAMENTOS       
           SELECT DT.PK_DETALLE_MEDIC INTO V_PK_DETALLE_MEDICAMENTO FROM DETALLES_MEDICAMENTOS DT
                  WHERE DT.FK_MEDICAMENTO = V_PK_MEDICAMENTO
                  AND DT.FK_PRES_MEDICAMENTO = V_PK_PRESENT_MEDICAMENTO
                  AND DT.UNIDAD_MEDIDA = U_GRAMOS_MEDICAMENTO;
                  
            IF V_PK_DETALLE_MEDICAMENTO > 0 THEN
               DELETE FROM DETALLES_MEDICAMENTOS DM WHERE DM.PK_DETALLE_MEDIC = V_PK_DETALLE_MEDICAMENTO;
               COMMIT;
               RETORNO := 2; -- MEDICAMENTOS CON SUS DETALLES ELIMINADO
             
             END IF;
          
           ELSE
             RETORNO := 1; --  MEDICAMENTO NO  REGISTRADO
         END IF;


END DELETE_INV_MEDICAMENTO;

---CANTIDAD MEDICAMENTO INVENTARIO

CREATE OR REPLACE PROCEDURE INSERT_CANTIDAD_MEDICAMENTOS
                                               (I_PK_MEDICAMENTO IN FARMACIA_ALTO_COSTO.MEDICAMENTOS.PK_MEDICAMENTO%TYPE,
                                                I_GRAMOS_MEDICAMENTO IN FARMACIA_ALTO_COSTO.DETALLES_MEDICAMENTOS.UNIDAD_MEDIDA%TYPE,
                                                I_CANTIDAD IN FARMACIA_ALTO_COSTO.INVENTARIO_MEDICAMENTOS.CANTIDAD%TYPE,
                                                I_LOTE IN FARMACIA_ALTO_COSTO.INVENTARIO_MEDICAMENTOS.LOTE%TYPE,
                                                RETORNO OUT INTEGER
                                               )
IS
  V_COUNT_MEDICAMENTO NUMBER(7);
  V_PK_MEDICAMENTO NUMBER(7);
  V_PK_DETALLE_MEDIC NUMBER(7);
  --V_CANTIDAD_MEDICAMENTO NUMBER(7);
BEGIN
  SELECT COUNT(*) INTO V_COUNT_MEDICAMENTO FROM MEDICAMENTOS M
         WHERE M.PK_MEDICAMENTO = I_PK_MEDICAMENTO;

         IF V_COUNT_MEDICAMENTO > 0 THEN

           SELECT MD.PK_MEDICAMENTO INTO V_PK_MEDICAMENTO FROM MEDICAMENTOS MD
                  WHERE MD.PK_MEDICAMENTO = I_PK_MEDICAMENTO;
           SELECT DM.PK_DETALLE_MEDIC INTO V_PK_DETALLE_MEDIC FROM DETALLES_MEDICAMENTOS DM
                  WHERE DM.FK_MEDICAMENTO = V_PK_MEDICAMENTO;
             UPDATE INVENTARIO_MEDICAMENTOS II
                    SET II.CANTIDAD = II.CANTIDAD + I_CANTIDAD,II.LOTE = II.LOTE + I_LOTE
              WHERE II.FK_DETALLE_MEDIC = V_PK_DETALLE_MEDIC;
              COMMIT;
              RETORNO := 2; -- INCREMENTO DE MEDICAMENTO
              --ESTATUS SEGUN LA CANTIDAD DE MEDICAMENTOS 
             /* SELECT IM.CANTIDAD INTO V_CANTIDAD_MEDICAMENTO FROM INVENTARIO_MEDICAMENTOS IM
                     WHERE IM.FK_MEDICAMENTO = V_PK_MEDICAMENTO;
                     
              IF V_CANTIDAD_MEDICAMENTO >= 500 THEN 
                 UPDATE INVENTARIO_MEDICAMENTOS IU SET IU.FK_ESTATUS = 2
                        WHERE IU.FK_MEDICAMENTO = V_PK_MEDICAMENTO;
                 COMMIT;
                 RETORNO := 2; -- EL MEDICAMENTO MODIFICADO
                ELSIF V_CANTIDAD_MEDICAMENTO <= 250 THEN
                     UPDATE INVENTARIO_MEDICAMENTOS IU SET IU.FK_ESTATUS = 15
                        WHERE IU.FK_MEDICAMENTO = V_PK_MEDICAMENTO;
                     COMMIT;
                     RETORNO := 2; -- EL MEDICAMENTO MODIFICADO
                ELSE 
                  UPDATE INVENTARIO_MEDICAMENTOS IU SET IU.FK_ESTATUS = 16
                        WHERE IU.FK_MEDICAMENTO = V_PK_MEDICAMENTO;
                     COMMIT;
                     RETORNO := 2; -- EL MEDICAMENTO MODIFICADO
               END IF ;*/
              
              
          ELSE

            RETORNO := 3; --  MEDICAMENTO NO REGISTRADO

         END IF;

END INSERT_CANTIDAD_MEDICAMENTOS;



-------------------------*----------------------------------------------------
------------------------*---------------------------------------------------


---PACIENTES

--INSERT 

CREATE OR REPLACE PROCEDURE INSERT_PACIENTE
                                          (I_PK_CEDULA_CIUDADANO IN FARMACIA_ALTO_COSTO.CIUDADANO.PK_CIUDADANO%TYPE,
                                           I_CEDULA_CIUDADANO IN FARMACIA_ALTO_COSTO.CIUDADANO.CEDULA%TYPE,
                                           I_CEDULA_PARIENTE IN FARMACIA_ALTO_COSTO.PACIENTE.FK_PARIENTE%TYPE,
                                           I_PATOLOGIA IN FARMACIA_ALTO_COSTO.PATOLOGIA_PACIENTE.FK_PATOLOGIA%TYPE,
                                           I_MEDICO IN FARMACIA_ALTO_COSTO.PATOLOGIA_PACIENTE.FK_MEDICO%TYPE,
                                           --I_ESTATUS IN FARMACIA_ALTO_COSTO.PACIENTE.FK_ESTATUS%TYPE,
                                           I_PESO IN FARMACIA_ALTO_COSTO.PACIENTE.PESO%TYPE,
                                           I_ALTURA IN FARMACIA_ALTO_COSTO.PACIENTE.ALTURA%TYPE,
                                           I_SUPERFICIE_CORP IN FARMACIA_ALTO_COSTO.PACIENTE.SUPERFICIE_CORPORAL%TYPE,
                                           I_CORREO IN FARMACIA_ALTO_COSTO.PACIENTE.CORREO%TYPE,
                                           I_TELEFONO IN FARMACIA_ALTO_COSTO.PACIENTE.TELEFONNO%TYPE,
                                           I_TLF_ALTERNO IN FARMACIA_ALTO_COSTO.PACIENTE.TLF_ALTERNO%TYPE,
                                           --I_COLUMNA_AUDITORIA IN FARMACIA_ALTO_COSTO.PACIENTE.CORREO%TYPE,
                                           RETORNO OUT INTEGER
                                          )
AS
   V_COUNT_CIUDADANO NUMBER(7);
   --V_COUNT_PARIENTE NUMBER(7);
   V_PK_CIUDADANO NUMBER(7);
   V_FK_CIUDADANO NUMBER(7);
   V_PK_PARIENTE NUMBER(7);
   --V_FK_CIUDADANO_PARIENTE NUMBER(7);
   V_PK_PACIENTE NUMBER(7);
   --V_CREATE_DATE DATE;
BEGIN
  SELECT COUNT(*) INTO V_COUNT_CIUDADANO FROM FARMACIA_ALTO_COSTO.CIUDADANO CC
          WHERE CC.PK_CIUDADANO = I_PK_CEDULA_CIUDADANO;

          IF V_COUNT_CIUDADANO > 0 THEN

             SELECT C.PK_CIUDADANO INTO V_PK_CIUDADANO FROM CIUDADANO C
                    WHERE C.PK_CIUDADANO = I_PK_CEDULA_CIUDADANO;
              
             IF V_PK_CIUDADANO > 0 THEN

                 SELECT COUNT(*) INTO V_FK_CIUDADANO FROM PACIENTE PN
                        WHERE PN.FK_CIUDADANO = V_PK_CIUDADANO;
                    
                 IF V_FK_CIUDADANO > 0 THEN
                    RETORNO := 3;--PACIENTE YA REGISTRADO
                    
                  ELSE
                    --SELECT CN.PK_CIUDADANO INTO V_FK_CIUDADANO_PARIENTE FROM CIUDADANO CN 
                           --WHERE CN.PK_CIUDADANO = I_CEDULA_PARIENTE;
                     
                    INSERT INTO PARIENTE (PK_PARIENTE,FK_CIUDADANO) 
                           VALUES (SEQ_PARIENTE.NEXTVAL,I_CEDULA_PARIENTE);
                    COMMIT;
                    SELECT MAX(PR.PK_PARIENTE) INTO V_PK_PARIENTE FROM PARIENTE PR;
                    
                    INSERT INTO PACIENTE (PK_PACIENTE,FK_CIUDADANO,FK_PARIENTE,PESO,ALTURA,SUPERFICIE_CORPORAL,CORREO,TELEFONNO,TLF_ALTERNO)
                            VALUES(SEQ_PACIENTE.NEXTVAL,V_PK_CIUDADANO,V_PK_PARIENTE,I_PESO,I_ALTURA,I_SUPERFICIE_CORP,I_CORREO,I_TELEFONO,I_TLF_ALTERNO);
                    COMMIT;
                    SELECT MAX(PT.PK_PACIENTE) INTO V_PK_PACIENTE FROM PACIENTE PT;
                    
                    UPDATE PARIENTE PE SET PE.FK_PACIENTE = V_PK_PACIENTE 
                           WHERE PE.PK_PARIENTE = V_PK_PARIENTE;
                    INSERT INTO PATOLOGIA_PACIENTE (PK_PATOLOGIA_PAC,FK_PACIENTE,FK_PATOLOGIA,FK_MEDICO,FK_ESTATUS,CREATE_DATE)
                           VALUES (SEQ_PATOLOGIA_PACI.NEXTVAL,V_PK_PACIENTE,I_PATOLOGIA,I_MEDICO,18,SYSDATE);
                    COMMIT; 
                    UPDATE TICKET TK SET TK.FK_ESTATUS = 18 WHERE TK.CEDULA_CIUDADANO = I_CEDULA_CIUDADANO;
                    COMMIT;
                    --DELETE FROM TICKET TK WHERE TK.CEDULA_CIUDADANO = I_CEDULA_CIUDADANO;
                    RETORNO := 2;--PACIENTE Y PATOLOGIA REGISTRADO
                     
                 END IF;

             END IF;

           ELSE
             RETORNO :=1;--NO EXISTE CIUDADANO
          END IF;

END INSERT_PACIENTE;

--INSERT PACIENTE EXISTENTE

CREATE OR REPLACE PROCEDURE INSERT_PACIENTE_EXISTENTE
                                          (I_CEDULA_CIUDADANO IN FARMACIA_ALTO_COSTO.CIUDADANO.CEDULA%TYPE,
                                           I_PATOLOGIA IN FARMACIA_ALTO_COSTO.PATOLOGIA_PACIENTE.FK_PATOLOGIA%TYPE,
                                           I_MEDICO IN FARMACIA_ALTO_COSTO.PATOLOGIA_PACIENTE.FK_MEDICO%TYPE,
                                           --I_ESTATUS IN FARMACIA_ALTO_COSTO.PACIENTE.FK_ESTATUS%TYPE,
                                           --I_PESO IN FARMACIA_ALTO_COSTO.PACIENTE.PESO%TYPE,
                                           --I_ALTURA IN FARMACIA_ALTO_COSTO.PACIENTE.ALTURA%TYPE,
                                           --I_SUPERFICIE_CORP IN FARMACIA_ALTO_COSTO.PACIENTE.SUPERFICIE_CORPORAL%TYPE,
                                           --I_CORREO IN FARMACIA_ALTO_COSTO.PACIENTE.CORREO%TYPE,
                                           --I_TELEFONO IN FARMACIA_ALTO_COSTO.PACIENTE.TELEFONNO%TYPE,
                                           --I_TLF_ALTERNO IN FARMACIA_ALTO_COSTO.PACIENTE.TLF_ALTERNO%TYPE,
                                           --I_COLUMNA_AUDITORIA IN FARMACIA_ALTO_COSTO.PACIENTE.CORREO%TYPE,
                                           RETORNO OUT INTEGER
                                          )
AS
   V_COUNT_CIUDADANO NUMBER(7);
   V_COUNT_PACIENTE NUMBER(7);
   V_COUNT_PATOLOGIA_PACIENTE NUMBER(7);
   V_PK_CIUDADANO NUMBER(7);
   V_FK_CIUDADANO NUMBER(7);
   V_FK_PATOLOGIA NUMBER(7);
   --V_FK_PACIENTE NUMBER(7);
   V_PK_PACIENTE NUMBER(7);
   V_CREATE_DATE DATE;
BEGIN
  SELECT COUNT(*) INTO V_COUNT_CIUDADANO FROM FARMACIA_ALTO_COSTO.CIUDADANO CC
          WHERE CC.CEDULA = I_CEDULA_CIUDADANO;

          IF V_COUNT_CIUDADANO > 0 THEN

             SELECT C.PK_CIUDADANO INTO V_PK_CIUDADANO FROM CIUDADANO C
                    WHERE C.CEDULA = I_CEDULA_CIUDADANO;

             IF V_PK_CIUDADANO > 0 THEN
                 SELECT COUNT(*) INTO V_COUNT_PACIENTE FROM PACIENTE PN
                        WHERE PN.FK_CIUDADANO = V_PK_CIUDADANO;
                        
                 IF V_COUNT_PACIENTE > 0 THEN
                    SELECT PI.PK_PACIENTE INTO V_PK_PACIENTE FROM PACIENTE PI
                           WHERE PI.FK_CIUDADANO =  V_PK_CIUDADANO;
                    
                       IF V_PK_PACIENTE > 0 THEN
                          SELECT COUNT(*) INTO V_COUNT_PATOLOGIA_PACIENTE FROM PATOLOGIA_PACIENTE PE
                                 WHERE PE.FK_PACIENTE = V_PK_PACIENTE;

                          IF V_COUNT_PATOLOGIA_PACIENTE > 0 THEN
                             SELECT PA.FK_PATOLOGIA INTO V_FK_PATOLOGIA FROM PATOLOGIA_PACIENTE PA
                                 WHERE PA.FK_PACIENTE = V_PK_PACIENTE;
                             SELECT LAST_DAY(TO_CHAR(TO_DATE(PG.CREATE_DATE,'DD/MM/YYYY'))) INTO V_CREATE_DATE FROM PATOLOGIA_PACIENTE PG
                                 WHERE PG.FK_PACIENTE = V_PK_PACIENTE;

                              IF V_FK_PATOLOGIA = I_PATOLOGIA AND V_CREATE_DATE = V_CREATE_DATE THEN

                                 RETORNO := 4;--PACIENTE CON PATOLOGIA REGISTRADO RECIENTEMENTE CON LOS MISMOS DATOS

                                ELSE
                                  INSERT INTO PATOLOGIA_PACIENTE (PK_PATOLOGIA_PAC,FK_PACIENTE,FK_PATOLOGIA,FK_MEDICO,FK_ESTATUS,CREATE_DATE)
                                       VALUES (SEQ_PATOLOGIA_PACI.NEXTVAL,V_PK_PACIENTE,I_PATOLOGIA,I_MEDICO,18,SYSDATE);
                                  COMMIT;
                                  RETORNO := 2;--PACIENTE Y PATOLOGIA REGISTRADO
                               END IF;
                             ELSE
                               INSERT INTO PATOLOGIA_PACIENTE (PK_PATOLOGIA_PAC,FK_PACIENTE,FK_PATOLOGIA,FK_MEDICO,FK_ESTATUS,CREATE_DATE)
                                  VALUES (SEQ_PATOLOGIA_PACI.NEXTVAL,V_PK_PACIENTE,I_PATOLOGIA,I_MEDICO,18,SYSDATE);
                               COMMIT;
                               RETORNO := 2;--PACIENTE Y PATOLOGIA NUEVA REGISTRADA

                            END IF;

                          ELSE
                            RETORNO:= 3; --PACIENTE NO SE LOGRO REGISTRAR
                         END IF;

                       
                       
                      ELSE
                           RETORNO := 1;--PACIENTE NO REGISTRADO
                     END IF;
                END IF;

              ELSE
                 RETORNO :=1;--NO EXISTE CIUDADANO
              END IF;

END INSERT_PACIENTE_EXISTENTE;


--INSERT PACIENTE RETIRADO 

CREATE OR REPLACE PROCEDURE INSERT_PACIENTE_RETIRADO (I_CIUDADANO IN FARMACIA_ALTO_COSTO.CIUDADANO.CEDULA%TYPE,
                                                      I_NRO_CEDULA IN FARMACIA_ALTO_COSTO.CIUDADANO.CEDULA%TYPE,
                                                      RETORNO OUT INTEGER
                                                     )
AS
  V_COUNT_CIUDADANO NUMBER(7);
  V_PK_CIUDADANO NUMBER(7);
BEGIN
     SELECT COUNT(*) INTO V_COUNT_CIUDADANO FROM FARMACIA_ALTO_COSTO.CIUDADANO CC
          WHERE CC.CEDULA = I_CIUDADANO;

     IF V_COUNT_CIUDADANO > 0 THEN
        SELECT C.PK_CIUDADANO INTO V_PK_CIUDADANO FROM CIUDADANO C
                    WHERE C.CEDULA = I_CIUDADANO;

        IF V_PK_CIUDADANO > 0 THEN

           INSERT INTO PACIENTE_RETIRADO (PK_PACI_RETIRADO,FK_CIUDADANO,OBSERVACION)
                  VALUES(SEQ_PACI_RETIRADO.NEXTVAL,V_PK_CIUDADANO,DEFAULT);
           COMMIT;
           UPDATE TICKET T SET T.FK_ESTATUS = 9 WHERE T.CEDULA_CIUDADANO = I_NRO_CEDULA;
           COMMIT;
           --DELETE FROM TICKET T WHERE T.CEDULA_CIUDADANO = I_NRO_CEDULA;
           RETORNO := 2;--REGISTRO EXITOSO

        END IF;
       ELSE
            RETORNO := 1;--CIUDADANO NO EXISTE
     END IF;


END INSERT_PACIENTE_RETIRADO;





















